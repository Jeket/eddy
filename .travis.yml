## Cache PIP installs across jobs
cache:
  - pip

## Select test language
os: osx
language: generic
osx_image: xcode9.3

## Select python version
python:
  - 3.5

# Jobs environment variables
env:
  matrix:
    - TEST=actions
    - TEST=datatypes
    - TEST=diagram
    - TEST=export
    - TEST=functions
    - TEST=palette
    - TEST=profiles
    - TEST=tools

## Test only master and dev branches
branches:
  only:
    - travis-ci

#matrix:
#  include:
#  - os: linux
#    language: python
#    dist: trusty
#    sudo: false
#  - os: osx
#    language: generic
#    osx_image: xcode9.4

## Prepare build environment
#before_install:
# - ./scripts/configure-travis.sh
#before_install: |
#  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
#    brew update
#    # Recommended for installing Python from Homebrew
#    brew install openssl readline
#    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
#    # I didn't do this above because it works and I'm lazy.
#    brew outdated pyenv || brew upgrade pyenv
#    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
#    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
#    brew install pyenv-virtualenv
#    pyenv install $PYTHON
#    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
#    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
#    # modify the Bash environment. ??? So, I hand-set the variables instead.
#    export PYENV_VERSION=$PYTHON
#    export PATH="/Users/travis/.pyenv/shims:${PATH}"
#    pyenv-virtualenv venv
#    source venv/bin/activate
#    # A manual check that the correct version of Python is running.
#    python --version
#  fi

## Install dependencies from PyPI
install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ./scripts/configure-virtualenv.sh --with-pyenv=`which pyenv` --with-venv-dir=$HOME/eddy-build-venv --skip-jre-download; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then source $HOME/eddy-build-venv/bin/activate; fi
  - travis_retry pip install -U -r requirements/cython.txt
  - travis_retry pip install -U -r requirements/pyqt5.txt
  - travis_retry pip install -U -r requirements.txt
  - travis_retry pip install -U -r requirements-tests.txt
    
## Start X Virtual Framebuffer
#before_script:
#  - export DISPLAY=:99.0
#  - sh -e /etc/init.d/xvfb start
#  - sleep 5

## Run automated tests using nose
script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then xvfb-run --server-args='-screen 0 1024x768x24' nosetests --tests=tests/test_${TEST}.py --verbosity=3 --with-cov --cov eddy --cov-report term-missing --cov-config .coveragerc; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then nosetests --tests=tests/test_${TEST}.py --verbosity=3 --with-cov --cov eddy --cov-report term-missing --cov-config .coveragerc; fi

# Report tests coverage
after_success:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then python setup.py bdist_archive --format=gztar --no-jre; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then python setup.py bdist_dmg --no-jre; fi
#  - coveralls

# Setup notifications
#notifications:
#  webhooks:
#    urls:
#      - https://webhooks.gitter.im/e/aafeec4156a7fb26ef0c
#    on_success: always  # options: [always|never|change] default: always
#    on_failure: change  # options: [always|never|change] default: always
#    on_start: never     # default: never
