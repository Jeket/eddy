## Use trusty
dist: trusty

## Use container-based environment
sudo: false

## Cache PIP installs across jobs
cache:
  pip: true
  directories:
    - $HOME/.pyenv

## Select test language
language: python

## Select python version
python:
  - 3.5

# Jobs environment variables
env:
  matrix:
    - TEST=actions
    - TEST=datatypes
    - TEST=diagram
    - TEST=export
    - TEST=functions
    - TEST=palette
    - TEST=profiles
    - TEST=tools
    - TEST=packaging

## Setup branches to test
branches:
  only:
    - master
    - develop
    - /^deploy-.*$/

## Include an osx build job
matrix:
  include:
  - os: osx
    language: generic
    osx_image: xcode9
    env:
      - PYTHON_VERSION="3.5.4"
      - VENV_DIR="$HOME/eddy-venv"
      - TEST=packaging

## Prepare build environment
before_install:
  - ./scripts/travis/before_install.sh
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then source "$VENV_DIR/bin/activate"; fi

## Install dependencies from PyPI
install:
  - travis_retry pip install -U -r requirements/cython.txt
  - travis_retry pip install -U -r requirements/pyqt5.txt
  - travis_retry pip install -U -r requirements.txt
  - travis_retry pip install -U -r requirements-tests.txt
  - travis_retry pip install -U -r requirements-packaging.txt

## Run automated tests using nose
script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TEST" != "packaging" ]]; then
      xvfb-run --server-args='-screen 0 1024x768x24' nosetests --tests=tests/test_${TEST}.py --verbosity=3 --with-cov --cov eddy --cov-report term-missing --cov-config .coveragerc;
    fi;
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TEST" == "packaging" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      mkdir -p resources/java;
      cp -R "$JAVA_HOME/jre" resources/java/jre;
      ./scripts/prepare_jre.sh;
      travis_wait 30 python setup.py bdist_archive --format=gztar;
    fi;
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TEST" == "packaging" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      mkdir -p resources/java;
      cp -R "`/usr/libexec/java_home -v 1.8`/jre" resources/java/jre;
      ./scripts/prepare_jre.sh;
      travis_wait 30 python setup.py bdist_dmg;
    fi;

# Report tests coverage
#after_success:
#  - coveralls

before_deploy:
  - PYTHONPATH=".:$PYTHONPATH" python ./scripts/travis/before_deploy.py

## Package up and send
deploy:
  provider: bintray
  file: "descriptor.json"
  user: "$BINTRAY_USER"
  key: "$BINTRAY_KEY"
  skip_cleanup: true
  on:
    all_branches: true
    condition: $TEST = packaging

